{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "www/js/app.js",
			"settings":
			{
				"buffer_size": 3642,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "angular.module('weather.controllers', [])\n\n.controller('AppCtrl', function($scope, $ionicModal) {\n\n  // With the new view caching in Ionic, Controllers are only called\n  // when they are recreated or on app start, instead of every page change.\n  // To listen for when this page is active (for example, to refresh data),\n  // listen for the $ionicView.enter event:\n  //$scope.$on('$ionicView.enter', function(e) {\n  //});\n\n  //addLocation modal\n/*  $ionicModal.fromTemplateUrl('templates/addLocation.html', {\n    id: '0',\n    scope: $scope,\n    animation: 'slide-in-up'\n  }).then(function(modal){\n    $scope.addLocationModal = modal;\n  });\n*/\n\n  // Triggered in the login modal to close it\n/*  $scope.closeModal = function() {\n      $scope.addLocationModal.hide();\n  };\n\n\n  $scope.addModal = function(){\n      $scope.addLocationModal.show();\n  };\n*/\n\n\n\n})\n\n\n.controller('GetLocationCtrl', function($scope, $ionicModal, $http, $state,  Locations, OwmApi, YahooApi){\n\n    //addLocation modal\n    $ionicModal.fromTemplateUrl('templates/addLocation.html', {\n      id: '0',\n      scope: $scope,\n      animation: 'slide-in-up'\n    }).then(function(modal){\n      $scope.addLocationModal = modal;\n    });\n\n\n\n\n  $scope.locationInfo = {};\n  $scope.searchInfo = {};\n\n  // $ionicModal.fromTemplateUrl('templates/addLocation.html', function(modal){\n  //   $scope.addLocationModal = modal;\n  // });\n\n  $scope.closeModal = function() {\n      $scope.addLocationModal.hide();\n  };\n\n\n  $scope.addModal = function(){\n      $scope.addLocationModal.show();\n  };\n\n\n  $scope.locations = Locations.all();\n\n  $scope.deleteLocation = function(location){\n      var index = Locations.getLocationIndex($scope.locations, 'zip', location);\n      if (index >-1){\n        $scope.locations.splice(index, 1);\n      }\n      console.log($scope.locations);\n      Locations.save($scope.locations);\n\n  };\n\n  var reset = function(){\n    if($scope.locationInfo){\n      $scope.locationInfo = null;\n    } \n  };\n\n  $scope.locations = Locations.all();\n  $scope.activeLocation = Locations.getActiveLocation();\n\n  $scope.goToLocation = function(zipId){\n    if(zipId){\n      var index = {name : Locations.getNamebyZip($scope.locations, 'zip', zipId), zip: zipId};\n    }\n    else{\n      var index = {name : $scope.locationInfo.city.name, zip : $scope.searchInfo.zip};\n    }\n\n    Locations.setActiveLocation(index);\n    $state.go('app.view', {}, {reload:true});\n    $scope.closeModal();\n     \n  };\n\n  $scope.saveLocation = function(){\n    if($scope.locations == null){\n      $scope.locations = [];\n    }\n\n    var newLocation = Locations.newLocation($scope.locationInfo.city.name, $scope.searchInfo.zip);\n    var ifExists = Locations.checkIfExists($scope.locations, newLocation.zip);\n    if(ifExists == true){\n      alert(\"Already saved!\"); \n    }\n    else{\n      $scope.locations.push(newLocation);\n      Locations.save($scope.locations);\n    }\n\n\n    $scope.goToLocation();\n  }\n\n  $scope.findZip = function(){\n\n    OwmApi.getZip($scope.searchInfo.zip)\n\n    .then(function(response){\n      $scope.locationInfo = response.data;\n      if($scope.locationInfo.cod == \"404\"){\n        $scope.error = \"Can't find that zip code!\";\n        console.log($scope.error);\n      }\n      else if ($scope.locationInfo.cod = \"200\"){\n        $scope.error = false;\n\n        var workaround = 1;\n        $scope.$watch('searchInfo.zip', function(){\n          workaround --;\n          if(workaround < 0){\n            reset();\n          }\n        });\n\n      }\n    }, function(){\n      alert('no go');\n    });\n\n  };\n\n $scope.active = Locations.getActiveLocation();\n  console.log($scope.active);\n \n\n})\n.controller('forecast', function($scope, $state,  Locations, OwmApi){\n\n\n  OwmApi.getZip(Locations.getActiveLocation().zip)\n    .then(function(response){\n      $scope.city = response.data;\n      $scope.time = ($scope.city.list[0].dt)*1000;\n      console.log($scope.city);\n      if($scope.city.cod =+ \"404\"){\n        $scope.error = \"Something broke. Can't find the zip code for that city!\"\n      }\n      else if ($scope.city.cod == \"200\"){\n        $scope.error = false;\n      }\n    }, function(){\n      console.log('Check yo internet connection, homie')\n    });\n})\n.controller('testCtrl', function($scope, YahooApi){\n    YahooApi.yApi('location','provo').then(function(response){\n      console.log('json return:'+JSON.stringify(response.data));\n\n      console.log('test: '+response.data.query.results.channel.location.city);\n    }, function(){\n      console.log('didnt connect');\n    });\n\n})\n;\n\n\n",
			"file": "www/js/controllers.js",
			"file_size": 4876,
			"file_write_time": 130965936086635645,
			"settings":
			{
				"buffer_size": 4516,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/templates/test.html",
			"settings":
			{
				"buffer_size": 142,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/xampp/htdocs/www/weather",
		"/C/xampp/htdocs/www/weather/www",
		"/C/xampp/htdocs/www/weather/www/js",
		"/C/xampp/htdocs/www/weather/www/templates"
	],
	"file_history":
	[
		"/C/xampp/apache/conf/httpd.conf",
		"/D/Users/Ivan/www/weather/weather/www/js/controllers.js",
		"/D/Users/Ivan/www/weather/weather/www/js/app.js",
		"/C/xampp/htdocs/www/weather/www/js/controllers.js",
		"/C/xampp/htdocs/www/weather/www/js/app.js",
		"/C/xampp/htdocs/www/weather/package.json",
		"/C/xampp/htdocs/www/weather/ionic.project",
		"/C/Windows/System32/drivers/etc/hosts",
		"/C/xampp/htdocs/www/magestack/.htaccess"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"yahoo",
			"yApi",
			"echo $this->__('Your order # is",
			"echo $this->__('Your order # is: %s', ",
			"echo $this->__('Your order ",
			"echo $this->__('Your order # is: %s', $this->getOrderId())"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "www/js/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3642,
						"regions":
						{
						},
						"selection":
						[
							[
								3642,
								3642
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1080.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "www/js/controllers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4516,
						"regions":
						{
						},
						"selection":
						[
							[
								2958,
								2958
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 395.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "www/templates/test.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 142,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.432114882507,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "weather.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"app/design/frontend/sb/default/template/checkout/suc",
				"app\\design\\frontend\\sb\\default\\template\\checkout\\success.phtml"
			],
			[
				"app/design/frontend/activz/default/template/checkout/suc",
				"app\\design\\frontend\\activz\\default\\template\\checkout\\success.phtml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 236.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
